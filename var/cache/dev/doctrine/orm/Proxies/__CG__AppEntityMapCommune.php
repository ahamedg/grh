<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MapCommune extends \App\Entity\MapCommune implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'id', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'code', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'libelle', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'description', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'prefecture', 'idCompte', 'actif', 'supprimer', 'dateAjout', 'dateEdit', 'idUserAuteur', 'idUserEdit', 'version'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'id', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'code', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'libelle', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'description', '' . "\0" . 'App\\Entity\\MapCommune' . "\0" . 'prefecture', 'idCompte', 'actif', 'supprimer', 'dateAjout', 'dateEdit', 'idUserAuteur', 'idUserEdit', 'version'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MapCommune $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCode(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode(string $code): \App\Entity\MapCommune
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getLibelle(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLibelle', []);

        return parent::getLibelle();
    }

    /**
     * {@inheritDoc}
     */
    public function setLibelle(string $libelle): \App\Entity\MapCommune
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLibelle', [$libelle]);

        return parent::setLibelle($libelle);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription(?string $description): \App\Entity\MapCommune
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrefecture(): ?\App\Entity\MapPrefecture
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrefecture', []);

        return parent::getPrefecture();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrefecture(?\App\Entity\MapPrefecture $prefecture): \App\Entity\MapCommune
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrefecture', [$prefecture]);

        return parent::setPrefecture($prefecture);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCompte()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCompte', []);

        return parent::getIdCompte();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCompte($idCompte): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCompte', [$idCompte]);

        parent::setIdCompte($idCompte);
    }

    /**
     * {@inheritDoc}
     */
    public function getActif()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActif', []);

        return parent::getActif();
    }

    /**
     * {@inheritDoc}
     */
    public function setActif($actif): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActif', [$actif]);

        parent::setActif($actif);
    }

    /**
     * {@inheritDoc}
     */
    public function getSupprimer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSupprimer', []);

        return parent::getSupprimer();
    }

    /**
     * {@inheritDoc}
     */
    public function setSupprimer($supprimer): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSupprimer', [$supprimer]);

        parent::setSupprimer($supprimer);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateAjout()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateAjout', []);

        return parent::getDateAjout();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateAjout($dateAjout): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateAjout', [$dateAjout]);

        parent::setDateAjout($dateAjout);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEdit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEdit', []);

        return parent::getDateEdit();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEdit($dateEdit): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEdit', [$dateEdit]);

        parent::setDateEdit($dateEdit);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUserAuteur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUserAuteur', []);

        return parent::getIdUserAuteur();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUserAuteur($idUserAuteur): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUserAuteur', [$idUserAuteur]);

        parent::setIdUserAuteur($idUserAuteur);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUserEdit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUserEdit', []);

        return parent::getIdUserEdit();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUserEdit($idUserEdit): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUserEdit', [$idUserEdit]);

        parent::setIdUserEdit($idUserEdit);
    }

    /**
     * {@inheritDoc}
     */
    public function getVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVersion', []);

        return parent::getVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setVersion($version): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVersion', [$version]);

        parent::setVersion($version);
    }

}
